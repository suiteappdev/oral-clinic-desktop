{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport { withStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nvar styles = function styles(theme) {\n  return {\n    paper: {\n      maxWidth: 936,\n      margin: 'auto',\n      overflow: 'hidden'\n    },\n    searchBar: {\n      borderBottom: '1px solid rgba(0, 0, 0, 0.12)'\n    },\n    searchInput: {\n      fontSize: theme.typography.fontSize\n    },\n    block: {\n      display: 'block'\n    },\n    addUser: {\n      marginRight: theme.spacing(1)\n    },\n    contentWrapper: {\n      margin: '40px 16px'\n    }\n  };\n};\n\nfunction Content(props) {\n  var classes = props.classes;\n  return React.createElement(Paper, {\n    className: classes.paper\n  }, React.createElement(AppBar, {\n    className: classes.searchBar,\n    position: \"static\",\n    color: \"default\",\n    elevation: 0\n  }, React.createElement(Toolbar, null, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    alignItems: \"center\"\n  }, React.createElement(Grid, {\n    item: true\n  }, React.createElement(SearchIcon, {\n    className: classes.block,\n    color: \"inherit\"\n  })), React.createElement(Grid, {\n    item: true,\n    xs: true\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    placeholder: \"Search by email address, phone number, or user UID\",\n    InputProps: {\n      disableUnderline: true,\n      className: classes.searchInput\n    }\n  })), React.createElement(Grid, {\n    item: true\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.addUser\n  }, \"Add user\"), React.createElement(Tooltip, {\n    title: \"Reload\"\n  }, React.createElement(IconButton, null, React.createElement(RefreshIcon, {\n    className: classes.block,\n    color: \"inherit\"\n  }))))))), React.createElement(\"div\", {\n    className: classes.contentWrapper\n  }, React.createElement(Typography, {\n    color: \"textSecondary\",\n    align: \"center\"\n  }, \"No users for this project yet\")));\n}\n\nContent.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Content);","map":{"version":3,"sources":["/Volumes/SSD/Andrew/oral-clinic/renderer/components/Content.js"],"names":["React","PropTypes","AppBar","Toolbar","Typography","Paper","Grid","Button","TextField","Tooltip","IconButton","withStyles","SearchIcon","RefreshIcon","styles","theme","paper","maxWidth","margin","overflow","searchBar","borderBottom","searchInput","fontSize","typography","block","display","addUser","marginRight","spacing","contentWrapper","Content","props","classes","disableUnderline","className","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport { withStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nconst styles = theme => ({\n  paper: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden',\n  },\n  searchBar: {\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\n  },\n  searchInput: {\n    fontSize: theme.typography.fontSize,\n  },\n  block: {\n    display: 'block',\n  },\n  addUser: {\n    marginRight: theme.spacing(1),\n  },\n  contentWrapper: {\n    margin: '40px 16px',\n  },\n});\n\nfunction Content(props) {\n  const { classes } = props;\n\n  return (\n    <Paper className={classes.paper}>\n      <AppBar className={classes.searchBar} position=\"static\" color=\"default\" elevation={0}>\n        <Toolbar>\n          <Grid container spacing={2} alignItems=\"center\">\n            <Grid item>\n              <SearchIcon className={classes.block} color=\"inherit\" />\n            </Grid>\n            <Grid item xs>\n              <TextField\n                fullWidth\n                placeholder=\"Search by email address, phone number, or user UID\"\n                InputProps={{\n                  disableUnderline: true,\n                  className: classes.searchInput,\n                }}\n              />\n            </Grid>\n            <Grid item>\n              <Button variant=\"contained\" color=\"primary\" className={classes.addUser}>\n                Add user\n              </Button>\n              <Tooltip title=\"Reload\">\n                <IconButton>\n                  <RefreshIcon className={classes.block} color=\"inherit\" />\n                </IconButton>\n              </Tooltip>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.contentWrapper}>\n        <Typography color=\"textSecondary\" align=\"center\">\n          No users for this project yet\n        </Typography>\n      </div>\n    </Paper>\n  );\n}\n\nContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Content);\n"]},"metadata":{},"sourceType":"module"}